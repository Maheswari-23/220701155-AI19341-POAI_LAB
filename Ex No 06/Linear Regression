import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Data: House sizes (in square feet) and their prices (in $1000s)
house_sizes = np.array([500, 1000, 1500, 2000, 2500]).reshape(-1, 1)  # Feature
house_prices = np.array([150, 300, 450, 600, 750])  # Target

# Create and train the linear regression model
model = LinearRegression()
model.fit(house_sizes, house_prices)

# Predict prices for the given house sizes
predicted_prices = model.predict(house_sizes)

# Print the model parameters
print(f"Intercept: {model.intercept_}")
print(f"Slope (coefficient): {model.coef_[0]}")

# Predict the price of a house with size 1800 square feet
new_size = np.array([[1800]])
predicted_price = model.predict(new_size)
print(f"Predicted price for a house with 1800 sq ft: ${predicted_price[0]:.2f}k")

# Plot the data and the regression line
plt.scatter(house_sizes, house_prices, color="blue", label="Actual prices")
plt.plot(house_sizes, predicted_prices, color="red", label="Regression line")
plt.scatter(new_size, predicted_price, color="green", label="Prediction (1800 sq ft)")
plt.xlabel("House Size (sq ft)")
plt.ylabel("Price ($1000s)")
plt.title("House Prices vs. Size")
plt.legend()
plt.show()
